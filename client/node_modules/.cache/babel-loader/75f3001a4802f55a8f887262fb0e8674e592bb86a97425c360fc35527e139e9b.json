{"ast":null,"code":"import React,{createContext,useReducer}from\"react\";import AppReducer from'./AppReducer';import axios from'axios';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={transactions:[],error:null,loading:true};// Create context\nexport const GlobalContext=/*#__PURE__*/createContext(initialState);// Provider component\nexport const GlobalProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(AppReducer,initialState);// Actions\nasync function getTransactions(){try{const res=await axios.get('/api/v1/transactions');dispatch({type:'GET_TRANSACTIONS',payload:res.data.data});}catch(error){dispatch({type:'TRANSACTION_ERROR',payload:error.response.data.error});}}async function deleteTransaction(id){try{await axios.delete(\"/api/v1/transactions/\".concat(id));dispatch({type:'DELETE_TRANSACTION',payload:id});}catch(error){dispatch({type:'TRANSACTION_ERROR',payload:error.response.data.error});}}async function addTransaction(transaction){const config={headers:{'Content-Type':'application/json'}};try{const res=await axios.post('/api/v1/transactions',transaction,config);dispatch({type:'ADD_TRANSACTION',payload:res.data.data});}catch(error){dispatch({type:'TRANSACTION_ERROR',payload:error.response.data.error});}}return/*#__PURE__*/_jsx(GlobalContext.Provider,{value:{transactions:state.transactions,error:state.error,loading:state.loading,getTransactions,deleteTransaction,addTransaction},children:children});};","map":{"version":3,"names":["React","createContext","useReducer","AppReducer","axios","jsx","_jsx","initialState","transactions","error","loading","GlobalContext","GlobalProvider","_ref","children","state","dispatch","getTransactions","res","get","type","payload","data","response","deleteTransaction","id","delete","concat","addTransaction","transaction","config","headers","post","Provider","value"],"sources":["/Users/ishaan/expense-tracker-react/client/src/context/GlobalState.js"],"sourcesContent":["import React, {createContext, useReducer} from \"react\";\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Initial state\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Actions\n    async function getTransactions () {\n        try {\n            const res = await axios.get('/api/v1/transactions');\n\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n    }\n\n    async function deleteTransaction(id) {\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n\n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n\n    }\n\n    async function addTransaction(transaction) {\n        const config = {\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        }\n\n        try {\n             const res = await axios.post('/api/v1/transactions', transaction, config);\n             \n             dispatch({\n                type: 'ADD_TRANSACTION',\n                payload: res.data.data\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n        \n    }\n\n    return (<GlobalContext.Provider value = {{\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n    </GlobalContext.Provider>);\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,aAAa,CAAEC,UAAU,KAAO,OAAO,CACtD,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,YAAY,CAAG,CACjBC,YAAY,CAAE,EAAE,CAChBC,KAAK,CAAE,IAAI,CACXC,OAAO,CAAE,IACb,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,aAAa,cAAGV,aAAa,CAACM,YAAY,CAAC,CAExD;AACA,MAAO,MAAM,CAAAK,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGd,UAAU,CAACC,UAAU,CAAEI,YAAY,CAAC,CAE9D;AACA,cAAe,CAAAU,eAAeA,CAAA,CAAI,CAC9B,GAAI,CACA,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,sBAAsB,CAAC,CAEnDH,QAAQ,CAAC,CACLI,IAAI,CAAE,kBAAkB,CACxBC,OAAO,CAAEH,GAAG,CAACI,IAAI,CAACA,IACtB,CAAC,CAAC,CACN,CAAE,MAAOb,KAAK,CAAE,CACZO,QAAQ,CAAC,CACLI,IAAI,CAAE,mBAAmB,CACzBC,OAAO,CAAEZ,KAAK,CAACc,QAAQ,CAACD,IAAI,CAACb,KACjC,CAAC,CAAC,CACN,CACJ,CAEA,cAAe,CAAAe,iBAAiBA,CAACC,EAAE,CAAE,CACjC,GAAI,CACA,KAAM,CAAArB,KAAK,CAACsB,MAAM,yBAAAC,MAAA,CAAyBF,EAAE,CAAE,CAAC,CAEhDT,QAAQ,CAAC,CACLI,IAAI,CAAE,oBAAoB,CAC1BC,OAAO,CAAEI,EACb,CAAC,CAAC,CACN,CAAE,MAAOhB,KAAK,CAAE,CACZO,QAAQ,CAAC,CACLI,IAAI,CAAE,mBAAmB,CACzBC,OAAO,CAAEZ,KAAK,CAACc,QAAQ,CAACD,IAAI,CAACb,KACjC,CAAC,CAAC,CACN,CAEJ,CAEA,cAAe,CAAAmB,cAAcA,CAACC,WAAW,CAAE,CACvC,KAAM,CAAAC,MAAM,CAAG,CACXC,OAAO,CAAE,CACL,cAAc,CAAG,kBACrB,CACJ,CAAC,CAED,GAAI,CACC,KAAM,CAAAb,GAAG,CAAG,KAAM,CAAAd,KAAK,CAAC4B,IAAI,CAAC,sBAAsB,CAAEH,WAAW,CAAEC,MAAM,CAAC,CAEzEd,QAAQ,CAAC,CACNI,IAAI,CAAE,iBAAiB,CACvBC,OAAO,CAAEH,GAAG,CAACI,IAAI,CAACA,IACtB,CAAC,CAAC,CACN,CAAE,MAAOb,KAAK,CAAE,CACZO,QAAQ,CAAC,CACLI,IAAI,CAAE,mBAAmB,CACzBC,OAAO,CAAEZ,KAAK,CAACc,QAAQ,CAACD,IAAI,CAACb,KACjC,CAAC,CAAC,CACN,CAEJ,CAEA,mBAAQH,IAAA,CAACK,aAAa,CAACsB,QAAQ,EAACC,KAAK,CAAI,CACrC1B,YAAY,CAAEO,KAAK,CAACP,YAAY,CAChCC,KAAK,CAAEM,KAAK,CAACN,KAAK,CAClBC,OAAO,CAAEK,KAAK,CAACL,OAAO,CACtBO,eAAe,CACfO,iBAAiB,CACjBI,cACJ,CAAE,CAAAd,QAAA,CACGA,QAAQ,CACW,CAAC,CAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}